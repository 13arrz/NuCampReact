{"ast":null,"code":"var _jsxFileName = \"/Users/Barrz/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from \"reactstrap\"; // import CampsiteInfo from \"./CampsiteInfoComponent\";\n//import Directory from ' ./DirectoryComponent.js';\n\nclass Directory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCampsite: null //   campsites: [\n      //     {\n      //       id: 0,\n      //       name: \"React Lake Campground\",\n      //       image: \"assets/images/react-lake.jpg\",\n      //       elevation: 1233,\n      //       description:\n      //         \"Nestled in the foothills of the Chrome Mountains, this campground on the shores of the pristine React Lake is a favorite for fly fishers.\"\n      //     },\n      //     {\n      //       id: 1,\n      //       name: \"Chrome River Campground \",\n      //       image: \"assets/images/chrome-river.jpg\",\n      //       elevation: 877,\n      //       description:\n      //         \"Spend a few sunny days and starry nights beneath a canopy of old-growth firs at this enchanting spot by the Chrome River.\"\n      //     },\n      //     {\n      //       id: 2,\n      //       name: \"Breadcrumb Trail Campground\",\n      //       image: \"assets/images/breadcrumb-trail.jpg\",\n      //       elevation: 2901,\n      //       description:\n      //         \"Let NuCamp be your guide to this off-the-beaten-path, hike-in-only campground.\"\n      //     },\n      //     {\n      //       id: 3,\n      //       name: \"Redux Woods Campground\",\n      //       image: \"assets/images/redux-woods.jpg\",\n      //       elevation: 42,\n      //       description:\n      //         \"You'll never want to leave this hidden gem, deep within the lush Redux Woods.\"\n      //     }\n      //   ]\n\n    };\n  }\n\n  render() {\n    const directory = this.props.campsites.map(campsite => {\n      return React.createElement(\"div\", {\n        key: campsite.id,\n        className: \"col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        width: \"100\",\n        top: true,\n        src: campsite.image,\n        alt: campsite.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(CardImgOverlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, campsite.name))));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, directory));\n  }\n\n} //import Component because it is generic model that is built upon it\n// class CampSiteInfo extends Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   //Need render for React\n//   render() {\n//     const directory = this.props.campsites.map(campsite => {});\n//   }\n// }\n// onCampSiteSelect(campsite){\n//     this.ListeningStateChangedEvent({selectedCampsite: campsite});\n// }\n//Need export default or named for React\n\n\nexport default Directory;","map":{"version":3,"sources":["/Users/Barrz/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Directory","constructor","props","state","selectedCampsite","render","directory","campsites","map","campsite","id","image","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,QALF,EAMEC,SANF,QAOO,YAPP,C,CAQA;AACA;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,IADP,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnCW,KAAb;AAqCD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKJ,KAAL,CAAWK,SAAX,CAAqBC,GAArB,CAAyBC,QAAQ,IAAI;AACrD,aACE;AAAK,QAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAuB,QAAA,SAAS,EAAC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,KAAf;AAAqB,QAAA,GAAG,MAAxB;AAAyB,QAAA,GAAG,EAAED,QAAQ,CAACE,KAAvC;AAA8C,QAAA,GAAG,EAAEF,QAAQ,CAACG,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYH,QAAQ,CAACG,IAArB,CADF,CAFF,CADF,CADF;AAUD,KAXiB,CAAlB;AAYA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBN,SAAtB,CADF,CADF;AAKD;;AA5D+B,C,CA+DlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,eAAeN,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardText,\n  CardBody,\n  CardTitle\n} from \"reactstrap\";\n// import CampsiteInfo from \"./CampsiteInfoComponent\";\n//import Directory from ' ./DirectoryComponent.js';\n\nclass Directory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedCampsite: null\n      //   campsites: [\n      //     {\n      //       id: 0,\n      //       name: \"React Lake Campground\",\n      //       image: \"assets/images/react-lake.jpg\",\n      //       elevation: 1233,\n      //       description:\n      //         \"Nestled in the foothills of the Chrome Mountains, this campground on the shores of the pristine React Lake is a favorite for fly fishers.\"\n      //     },\n      //     {\n      //       id: 1,\n      //       name: \"Chrome River Campground \",\n      //       image: \"assets/images/chrome-river.jpg\",\n      //       elevation: 877,\n      //       description:\n      //         \"Spend a few sunny days and starry nights beneath a canopy of old-growth firs at this enchanting spot by the Chrome River.\"\n      //     },\n      //     {\n      //       id: 2,\n      //       name: \"Breadcrumb Trail Campground\",\n      //       image: \"assets/images/breadcrumb-trail.jpg\",\n      //       elevation: 2901,\n      //       description:\n      //         \"Let NuCamp be your guide to this off-the-beaten-path, hike-in-only campground.\"\n      //     },\n      //     {\n      //       id: 3,\n      //       name: \"Redux Woods Campground\",\n      //       image: \"assets/images/redux-woods.jpg\",\n      //       elevation: 42,\n      //       description:\n      //         \"You'll never want to leave this hidden gem, deep within the lush Redux Woods.\"\n      //     }\n      //   ]\n    };\n  }\n\n  render() {\n    const directory = this.props.campsites.map(campsite => {\n      return (\n        <div key={campsite.id} className=\"col-md-5 m-1\">\n          <Card>\n            <CardImg width=\"100\" top src={campsite.image} alt={campsite.name} />\n            <CardImgOverlay>\n              <CardTitle>{campsite.name}</CardTitle>\n            </CardImgOverlay>\n          </Card>\n        </div>\n      );\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"row\">{directory}</div>\n      </div>\n    );\n  }\n}\n\n//import Component because it is generic model that is built upon it\n\n// class CampSiteInfo extends Component {\n//   constructor(props) {\n//     super(props);\n//   }\n//   //Need render for React\n//   render() {\n//     const directory = this.props.campsites.map(campsite => {});\n//   }\n// }\n\n// onCampSiteSelect(campsite){\n//     this.ListeningStateChangedEvent({selectedCampsite: campsite});\n// }\n\n//Need export default or named for React\nexport default Directory;\n"]},"metadata":{},"sourceType":"module"}